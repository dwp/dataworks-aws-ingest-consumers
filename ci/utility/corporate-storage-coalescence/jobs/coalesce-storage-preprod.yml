jobs:
  - name: coalesce-storage-preprod
    max_in_flight: 1
    plan:
      - in_parallel:
        - put: meta
          resource: meta-preprod
        - get: utc-1am
          trigger: true
        - get: dataworks-corporate-storage-coalescence
          trigger: false
        - get: aws-ingestion
          trigger: false
        - get: dataworks-aws-ingest-consumers
          trigger: false

      - .: (( inject meta.plan.terraform-bootstrap ))

      - in_parallel:
        - .: (( inject meta.plan.terraform-output-ingest ))
          config:
            params:
              TF_WORKSPACE: preprod
        - .: (( inject meta.plan.terraform-output-ingest-consumers ))
          config:
            params:
              TF_WORKSPACE: preprod

      - .: (( inject meta-corporate-storage-coalescence.plan.run-coalesce-storage-task ))
        task: coalesce-audit-storage-for-yesterday
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            CORPORATE_STORAGE_TYPE: "audit"
            START_DATE: "yesterday"

      - .: (( inject meta-corporate-storage-coalescence.plan.run-coalesce-storage-task ))
        task: coalesce-equalities-storage-for-yesterday
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            CORPORATE_STORAGE_TYPE: "equalities"
            START_DATE: "yesterday"

      - .: (( inject meta-corporate-storage-coalescence.plan.run-coalesce-storage-task ))
        task: coalesce-main-storage-for-yesterday
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            CORPORATE_STORAGE_TYPE: "main"
            START_DATE: "yesterday"
