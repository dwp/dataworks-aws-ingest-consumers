jobs:
  - name: qa
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-qa
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
          - get: aws-dataworks-e2e-framework
            trigger: false
          - get: aws-snapshot-sender
            trigger: false
          - get: dw-al2-hardened-ami
            trigger: true
          - get: dataworks-aws-ingest-consumers
            trigger: true
          - get: k2hb-release
            version:
              tag: ((k2hb_version))
            trigger: true
            passed:
              - mirror-k2hb

      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-apply ))
        params:
          TF_WORKSPACE: 'qa'
      - .: (( inject meta.plan.terraform-plan ))
        params:
          TF_WORKSPACE: 'qa'

      - in_parallel:
          - .: (( inject meta.plan.terraform-output-ingest ))
            config:
              params:
                TF_WORKSPACE: qa
          - .: (( inject meta.plan.terraform-output-internal-compute ))
            config:
              params:
                TF_WORKSPACE: qa
          - .: (( inject meta.plan.terraform-output-snapshot-sender ))
            config:
              params:
                TF_WORKSPACE: qa

      - .: (( inject meta.plan.run-behave-job ))
        task: data-streaming-tests
        config:
          params:
            AWS_ACC: ((aws_account.qa))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
            E2E_FEATURE_TAG_FILTER: "data-streaming"

      - .: (( inject meta.plan.run-behave-job))
        task: end-to-end-tests
        config:
          params:
            AWS_ACC: ((aws_account.qa))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
            E2E_FEATURE_TAG_FILTER: "end-to-end"

    ensure:
      do:
        - .: (( inject meta.plan.tear-down ))
          config:
            params:
              AWS_ACC: ((aws_account.qa))
              AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
