jobs:
  - name: development
    max_in_flight: 1
    plan:
      - in_parallel:
        - put: meta
          resource: meta-development
        - get: dataworks-behavioural-framework
          trigger: false
        - get: dw-al2-hardened-ami
          trigger: true
        - get: dataworks-aws-ingest-consumers
          trigger: true
        - get: dw-al2-ecs-ami
          trigger: true
        - get: k2hb-release
          version:
            tag: ((k2hb_version))
          trigger: true
          passed:
            - mirror-k2hb

      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta-dataworks-aws-ingest-consumers.plan.terraform-apply ))
      - .: (( inject meta-dataworks-aws-ingest-consumers.plan.terraform-plan ))

      - .: (( inject meta-dataworks-aws-ingest-consumers.plan.run-behave-job ))
        task: data-streaming-tests
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
            E2E_FEATURE_TAG_FILTER: "data-streaming"

      - .: (( inject meta-dataworks-aws-ingest-consumers.plan.run-behave-job))
        task: end-to-end-tests
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
            E2E_FEATURE_TAG_FILTER: "end-to-end"

    ensure:
      do:
        - .: (( inject meta-dataworks-aws-ingest-consumers.plan.tear-down ))
          config:
            params:
              AWS_ACC: ((aws_account.development))
              AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
